<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pg10 on iwarford</title>
    <link>https://iwarford.org/tags/pg10/</link>
    <description>Recent content in Pg10 on iwarford</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://iwarford.org/tags/pg10/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using pg_partman to Define a Two-Dimensional Partitioning Scheme in Postgres 10</title>
      <link>https://iwarford.org/post/2d-pg_partman/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://iwarford.org/post/2d-pg_partman/</guid>
      <description>Partitioning in Postgres 10 Partitioning is the practice of splitting up a large table in a relational database into multiple tables, each storing a portion of the data, and having the collection of tables function as a single table.
Historically (before version 10), Postgres handled partitioning awkwardly. It was implemented using a combination of check constraints, table inheritence and triggers.
Since 10, the code to handle partitions has been moved into the database core, making the syntax easier to deal with, and removing the penalty on inserts and updates (since they no longer have to go through triggers).</description>
    </item>
    
  </channel>
</rss>